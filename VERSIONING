
As most of us already know, there have been many asm2bf iterations, the lastest one being asm2bfv4c. As the versioning scheme
usually featured asm2bf [version] [optional v] [letter; the higher the newer], many version numbers are already taken.

Declaring this, refurbished asm2bf with a few new instructions asm2bf5 (skipping 4 numbers inbetween!) doesn't seem like a
good idea to me, so I've switched into another versioning scheme.

From now on, the Izmit-series asm2bf (usually optimized to be used by the compilers), will be using legacy, non-semver naming.
The asm2bf4c or asm2bfv2a are simple examples of the old naming scheme.

The new asm2bfv1/1 versions will be from now on defined using semver. This way, the first release before log branch is merged
(as you read it, the branch has probably been merged), can be called either asm2bf v1 or asm2bf v1.0. This way we keep backwards
compatibility. As asm2bf will get so advanced, calling this version as asm2bf v1 will be a not-very-good idea (merely looking by
the progress), the next version will be called asm2bf v2.0. The [[.0]] is the suffix separating each version. I think
it just adds up to the confusion, but at least we have a measurable matter over asm2bf versioning.

Also, who remembers about asm2bfv2/3/4? The information about the assemblers is really tough one to get, because they publically
exist just formally. They obviously correspond to the Izmit version (v2=1, v3=2, v4=3&4). As Izmit5 will be just a mere wraparound
adding C++ compilation possibility, the core might stay the same. I might some time switch to asm2bf as it becomes more and
more mature to be worthy adding Izmit backend.

Izmit will keep running on asm2bfv4 for a some time. I'll strive to find old Izmit versions and hopefully host them somewhere.

