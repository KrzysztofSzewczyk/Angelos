#!/usr/bin/perl

use File::Basename;
use Getopt::Std;

%options = ();

sub help {
	print "bfmake - asm2bf automated build utility.";
	print "copyright (C) by Kamila Szewczyk, 2020";
	print "";
	print "usage: bfmake [-h/-s/-l/-o file] file.asm";
	print "or in form of a shebang: #!/bin/asmbf/bfmake [flags]";
	print "";
	print "available flags:";
	print " -h: display this help page.";
	print " -s: disable stripping of the brainfuck binary.";
	print " -p: disable bfasm step.";
	print " -l: disable standard library.";
	print "";
	print "IMPORTANT: FLAGS GO BEFORE INPUT FILE.";
	exit
}

sub switch_ext {
	my $path = shift @_;
	my ($name,$dir,$ext) = fileparse($path,'\..*');
	return $dir . $name . ".b";
}

sub build {
	my $name = shift @_;
	my $home = $ENV{"HOME"};
	
	die "No such file: $name" if (! -e $name);
	
	my $lib = "cat \"$home/.asmbf/lib/lib-bfm.lua\"";
	my $stripper = "\"$home/.asmbf/bfstrip\"";
	my $compiler = "\"$home/.asmbf/bfasm\"";
	my $output = switch_ext($name);
	
	$output = $options{o} if defined $options{o};
	$lib = 'echo ""' if defined $options{l};
	$stripper = 'cat' if defined $options{s};
	$compiler = 'cat' if defined $options{p};
	
	`bash -c \"{ $lib ; cat "$name" | sed -e "1!b" -e '/#/d' ; } | "$home/.asmbf/bfpp" | "$home/.asmbf/bflabels" | "$home/.asmbf/bfdata" | "$home/.asmbf/constpp" } | $compiler | $stripper > $output\"`;
	
	exit;
}

getopts("hsplo:", \%options);

help() if defined $options{h};

foreach (@ARGV) {
	build($_);
}
