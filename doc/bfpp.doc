
bfpp is a asm2bf preprocessor based on Lua.
All the lines starting with hash (#), are executed as Lua code during compile-time.
To embed the value of an expression to an arbitrary place in your code, you can use $() syntax.
Lua makes it really easy to make rich compile-time macros simplifying software development
using asm2bf.

The foundation macro list as of 8.04.2020:
 * #include("filename.asm") - include a file.
 * #alloc(): signature:
; Allocate a page and pass the pointer in target_register.
; This function has a side effect on register passed in clear.
; It's getting, simply, cleared.
#function alloc(target_register, clear)

Note alloc() will allocate just a single page.

 * #free(): signature:
; Free the page in target_register.
#function free(target_register)

Note free() will free just a single page.

Note that all of these functions are inlined, so if you plan on using alloc and free a lot,
make your own stubs.
