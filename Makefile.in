
# This file could have been written in more
# elegant manner, but I'm fine with it's current
# state.

# Kamila Szewczyk, Jul 2019 - Oct 2020

export CFLAGS=@DISTRO@
TARGETS=bfasm bfvm bfi bconv bfstrip bfderle

.PHONY: all clean install test bfpp redpower uninstall distclean dist preprocessor bfadbg

all: $(TARGETS) bfpp etc/bfasm.b bin preprocessor

install:
	mkdir -p "@PREFIX@share/asm2bf"
	chmod -R a+x bin/asmbf/*
	-cp -f bin/asmbf/* "@PREFIX@bin"
	-cp -f bin/asmbf/lib/* "@PREFIX@share/asm2bf"
	echo "asm2bf has been installed to @PREFIX@."

dist: clean distclean test-clean
	mkdir "asm2bf-@VERSION@"
	cp -rf b2bf bfpp etc examples bfadbg hla hacking lib-bfm microcode preprocessor redpower test "asm2bf-@VERSION@/"
	-cp -f * "asm2bf-@VERSION@/"
	cd "asm2bf-@VERSION@" && rm -f Makefile .travis.yml .editorconfig .gitattributes && cd ..
	tar -cf "asm2bf-@VERSION@.tar" "asm2bf-@VERSION@/"
	rm -rf "asm2bf-@VERSION@"

distclean:
	rm -f config.log config.status redpower/Makefile hla/Makefile preprocessor/Makefile etc/bfasm.b
	rm -rf autom4te.cache

preprocessor:
	make @MSFLAGS@-C preprocessor

redpower:
	make @MSFLAGS@-C redpower

bfpp:
	make @MSFLAGS@-C bfpp

test: test/*.asm
	@chmod a+x test/test.pl $^
	bfmake test/hello_fancy.asm
	bfi -d test/hello_fancy.b > /dev/null
	bfi -x test/hello_fancy.b > /dev/null
	bfi -c test/hello_fancy.b > /dev/null
	echo ""
	@test/test.pl $^

sync-test: test/*.asm
	@chmod a+x test/test.pl $^
	-bfi --help 2> /dev/null
	-bfi --version 2> /dev/null
	-bfi --blah 2> /dev/null
	@test/test.pl --blocking $^

uninstall:
	cd "@PREFIXbin" && rm bconv bfasm bfdata bfderle bfi bfi-rle bflabels bfmake bfpp bfstrip bfvm constpp effective vxcall
	cd "@PREFIXshare/asm2bf" && rm *.lua

hacking: preprocessor
	cp preprocessor/*.c hacking/

clean:
	rm -rf bin/
	rm -f preprocessor/*.c config.h asm2bf-*.tar $(TARGETS)
	-cd bfpp && make clean && cd ..
	-cd redpower && make clean && cd ..
	-cd preprocessor && make clean && cd ..
	-cd bfadbg && make clean && cd ..

etc/bfasm.b: bfasm bfstrip etc/bfasm.asm
	./bfasm < etc/bfasm.asm | ./bfstrip 79 > $@

bin: $(TARGETS)
	mkdir -p bin
	mkdir -p bin/asmbf
	mkdir -p bin/asmbf/lib
	cp $(TARGETS) bfpp/bfpp bfmake bfi-rle bin/asmbf/
	cp lib-bfm/*.lua bin/asmbf/lib/
	rm -rf $(TARGETS)

bfadbg:
	make @MSFLAGS@-C bfadbg
	cp bfadbg/bfadbg bin/bfadbg

test-clean:
	rm -f test/*.aout
	rm -f test/*.b
	rm -f test/*.bin
